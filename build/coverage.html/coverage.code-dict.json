{"/home/travis/build/npmtest/node-npmtest-telegram-api/test.js":"/* istanbul instrument in package npmtest_telegram_api */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-telegram-api/lib.npmtest_telegram_api.js":"/* istanbul instrument in package npmtest_telegram_api */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_telegram_api = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_telegram_api = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-telegram-api/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-telegram-api && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_telegram_api */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_telegram_api\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_telegram_api.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_telegram_api.rollup.js'] =\n            local.assetsDict['/assets.npmtest_telegram_api.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_telegram_api.__dirname + '/lib.npmtest_telegram_api.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Keyboard = exports.Question = exports.Forward = exports.BulkMessage = exports.Message = exports.File = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _api = require('./functions/api');\n\nvar _api2 = _interopRequireDefault(_api);\n\nvar _webhook = require('./functions/webhook');\n\nvar _webhook2 = _interopRequireDefault(_webhook);\n\nvar _poll = require('./functions/poll');\n\nvar _poll2 = _interopRequireDefault(_poll);\n\nvar _argumentParser = require('./functions/argument-parser');\n\nvar _argumentParser2 = _interopRequireDefault(_argumentParser);\n\nvar _events = require('events');\n\nvar _Message = require('./types/Message');\n\nvar _Message2 = _interopRequireDefault(_Message);\n\nvar _File = require('./types/File');\n\nvar _File2 = _interopRequireDefault(_File);\n\nvar _Keyboard = require('./types/Keyboard');\n\nvar _Keyboard2 = _interopRequireDefault(_Keyboard);\n\nvar _BulkMessage = require('./types/BulkMessage');\n\nvar _BulkMessage2 = _interopRequireDefault(_BulkMessage);\n\nvar _Question = require('./types/Question');\n\nvar _Question2 = _interopRequireDefault(_Question);\n\nvar _Forward = require('./types/Forward');\n\nvar _Forward2 = _interopRequireDefault(_Forward);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nif (!global._babelPolyfill) {\n  require('babel-polyfill');\n}\n\n\nvar DEFAULTS = {\n  update: {\n    offset: 0,\n    timeout: 20,\n    limit: 100\n  }\n};\n\nvar REQUIRED = 0;\n\n/**\n * Bot class used to connect to a new bot\n * Bots have an api property which gives access to all Telegram API methods,\n * see API class\n */\n\nvar Bot = function (_EventEmitter) {\n  _inherits(Bot, _EventEmitter);\n\n  /**\n   * Create and connect to a new bot\n   * @param  {object} options Bot properties.\n   */\n  function Bot() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { update: {} };\n\n    _classCallCheck(this, Bot);\n\n    var _this = _possibleConstructorReturn(this, (Bot.__proto__ || Object.getPrototypeOf(Bot)).call(this));\n\n    if (!options.token) {\n      throw new Error('Token cannot be empty');\n    }\n\n    _this.token = options.token;\n    _this.update = Object.assign(options.update || {}, DEFAULTS.update);\n\n    _this.api = new _api2.default(_this.token);\n\n    _this.msg = {};\n\n    // EventEmitter\n    _this._events = {};\n    _this._userEvents = [];\n\n    _this.setMaxListeners(100);\n    return _this;\n  }\n\n  /**\n   * Gets information about the bot and then\n   * 1) starts polling updates from API\n   * 2) sets a webhook as defined by the first parameter and listens for updates\n   * Emits an `update` event after polling with the response from server\n   * Returns a promise which is resolved after the bot information is received\n   * and set to it's `info` property i.e. bot.info\n   *\n   * @param {object} hook An object containg options passed to webhook\n   *                      properties:\n   *                       - url: HTTPS url to listen on POST requests coming\n   *                              from the Telegram API\n   *                       - port: the port to listen to, defaults to 443\n   *                       - server: An object passed to https.createServer\n   *\n   * @return {promise} A promise which is resolved with the response of getMe\n   */\n\n\n  _createClass(Bot, [{\n    key: 'start',\n    value: function start(hook) {\n      var _this2 = this;\n\n      if (hook) {\n        return (0, _webhook2.default)(hook, this);\n      }\n      return this.api.getMe().then(function (response) {\n        _this2.info = response.result;\n\n        _this2.on('update', _this2._update);\n\n        if (hook) {\n          return (0, _webhook2.default)(hook, _this2);\n        }\n\n        return (0, _poll2.default)(_this2);\n      });\n    }\n\n    /**\n     * Listens on specific message matching the pattern which can be an string\n     * or a regexp.\n     * @param  {string/regex} pattern\n     * @param  {function} listener function to call when a message matching the\n     *                             pattern is found, gets the Update\n     *                             In case of string, the message should start\n     *                             with the string i.e. /^yourString/\n     * @return {object} returns the bot object\n     */\n\n  }, {\n    key: 'get',\n    value: function get(pattern, listener) {\n      if (typeof pattern === 'string') {\n        pattern = new RegExp('^' + pattern);\n      }\n\n      this._userEvents.push({\n        pattern: pattern, listener: listener\n      });\n\n      return this;\n    }\n\n    /**\n     * Listens on a command\n     * @param  {string} command the command string, should not include slash (/)\n     * @param  {function} listener function to call when the command is received,\n     *                           gets the update\n     * @return {object} returns the bot object\n     */\n\n  }, {\n    key: 'command',\n    value: function command(_command, listener) {\n      var regex = /[^\\s]+/;\n\n      var cmd = _command.match(regex)[0].trim();\n\n      this._userEvents.push({\n        pattern: new RegExp('^/' + cmd),\n        parse: _argumentParser2.default.bind(null, _command),\n        listener: listener\n      });\n\n      return this;\n    }\n\n    /**\n     * Sends the message provided\n     * @param  {object} message The message to send. Gets it's send method called\n     * @return {unknown} returns the result of calling message's send method\n     */\n\n  }, {\n    key: 'send',\n    value: function send(message) {\n      return message.send(this).catch(console.error);\n    }\n\n    /**\n     * Stops the bot, deattaching all listeners and polling\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this._stop = true;\n\n      if (this._webhookServer) {\n        this._webhookServer.close();\n      }\n\n      this.removeListener('update', this._update);\n      this._events = {};\n    }\n\n    /**\n     * The internal update event listener, used to parse messages and fire\n     * command/get events - YOU SHOULD NOT USE THIS\n     *\n     * @param  {object} update\n     */\n\n  }, {\n    key: '_update',\n    value: function _update(update) {\n      var _this3 = this;\n\n      if (!this.update.offset) {\n        var updateId = update[update.length - 1].update_id;\n        this.update.offset = updateId;\n      }\n      if (this.update) {\n        this.update.offset += 1;\n      }\n\n      update.forEach(function (res) {\n        var _marked = [getAnswer].map(regeneratorRuntime.mark);\n\n        var msg = res.message || res.edited_message || res.channel_post;\n        var text = msg.text;\n        if (!text) {\n          return;\n        }\n\n        var selfUsername = '@' + _this3.info.username;\n\n        if (text.startsWith('/') && text.indexOf(selfUsername) > -1) {\n          // Commands are sent in /command@thisusername format in groups\n          var regex = new RegExp('(/.*)@' + _this3.info.username);\n          text = text.replace(regex, '$1');\n          msg.text = text;\n        }\n\n        var ev = _this3._userEvents.find(function (_ref) {\n          var pattern = _ref.pattern;\n          return pattern.test(text);\n        });\n\n        if (!ev) {\n          _this3.emit('command-notfound', msg);\n          return;\n        }\n\n        if (!ev.parse) {\n          ev.listener(msg);\n          return;\n        }\n\n        var _ev$parse = ev.parse(msg.text),\n            params = _ev$parse.params,\n            args = _ev$parse.args;\n\n        msg.args = args;\n\n        var requiredParams = Object.keys(params).filter(function (param) {\n          return params[param] === REQUIRED && !args[param];\n        });\n\n        if (!requiredParams.length) {\n          ev.listener(msg);\n          return;\n        }\n\n        var bot = _this3;\n        function getAnswer() {\n          var _this4 = this;\n\n          var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _loop, _iterator, _step;\n\n          return regeneratorRuntime.wrap(function getAnswer$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _iteratorNormalCompletion = true;\n                  _didIteratorError = false;\n                  _iteratorError = undefined;\n                  _context2.prev = 3;\n                  _loop = regeneratorRuntime.mark(function _loop() {\n                    var param, ga;\n                    return regeneratorRuntime.wrap(function _loop$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            param = _step.value;\n                            ga = new _Message2.default().to(msg.chat.id).text('Enter value for ' + param);\n                            _context.next = 4;\n                            return bot.send(ga).then(function (answer) {\n                              args[param] = answer.text;\n                            });\n\n                          case 4:\n                          case 'end':\n                            return _context.stop();\n                        }\n                      }\n                    }, _loop, _this4);\n                  });\n                  _iterator = requiredParams[Symbol.iterator]();\n\n                case 6:\n                  if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                    _context2.next = 11;\n                    break;\n                  }\n\n                  return _context2.delegateYield(_loop(), 't0', 8);\n\n                case 8:\n                  _iteratorNormalCompletion = true;\n                  _context2.next = 6;\n                  break;\n\n                case 11:\n                  _context2.next = 17;\n                  break;\n\n                case 13:\n                  _context2.prev = 13;\n                  _context2.t1 = _context2['catch'](3);\n                  _didIteratorError = true;\n                  _iteratorError = _context2.t1;\n\n                case 17:\n                  _context2.prev = 17;\n                  _context2.prev = 18;\n\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n\n                case 20:\n                  _context2.prev = 20;\n\n                  if (!_didIteratorError) {\n                    _context2.next = 23;\n                    break;\n                  }\n\n                  throw _iteratorError;\n\n                case 23:\n                  return _context2.finish(20);\n\n                case 24:\n                  return _context2.finish(17);\n\n                case 25:\n                case 'end':\n                  return _context2.stop();\n              }\n            }\n          }, _marked[0], this, [[3, 13, 17, 25], [18,, 20, 24]]);\n        }\n\n        var iterator = getAnswer();\n        (function loop() {\n          var next = iterator.next();\n          if (next.done) {\n            ev.listener(msg);\n            return;\n          }\n\n          next.value.then(loop);\n        })();\n      });\n    }\n  }]);\n\n  return Bot;\n}(_events.EventEmitter);\n\nexports.default = Bot;\nexports.File = _File2.default;\nexports.Message = _Message2.default;\nexports.BulkMessage = _BulkMessage2.default;\nexports.Forward = _Forward2.default;\nexports.Question = _Question2.default;\nexports.Keyboard = _Keyboard2.default;\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/functions/api.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _fetch = require('./fetch');\n\nvar _fetch2 = _interopRequireDefault(_fetch);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } // API methods\n\n\n/**\n * API class, has a function for each method of the Telegram API which take\n * an object argument, and send request to the API server\n *\n * Methods: getMe, sendMessage, forwardMessage, sendPhoto, sendAudio,\n * sendDocument, sendSticker, sendVideo, sendLocation, sendChatAction,\n * getUserProfilePhotos, getUpdates\n */\nvar API =\n/**\n * Create a new api object with the given token\n * @param  {string} token\n */\nfunction API(token) {\n  _classCallCheck(this, API);\n\n  this.token = token;\n};\n\nexports.default = API;\n\n\nAPI.prototype.request = function request(method, data) {\n  return (0, _fetch2.default)(this.token + '/' + method, data);\n};\n\nvar methods = ['getMe', 'sendMessage', 'forwardMessage', 'sendPhoto', 'sendAudio', 'sendDocument', 'sendSticker', 'sendVideo', 'sendLocation', 'sendChatAction', 'getUserProfilePhotos', 'getUpdates', 'setWebhook'];\n\nmethods.forEach(function (method) {\n  API.prototype[method] = function (data) {\n    //eslint-disable-line\n    return this.request(method, data);\n  };\n});\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/functions/fetch.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = fetch;\nexports.getBody = getBody;\n\nvar _unirest = require('unirest');\n\nvar _unirest2 = _interopRequireDefault(_unirest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction fetch(path) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return new Promise(function (resolve, reject) {\n    var files = {};\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = Object.keys(data)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var key = _step.value;\n\n        if (data[key].file) {\n          files[key] = data[key].file;\n          delete data[key];\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    _unirest2.default.post('https://api.telegram.org/bot' + path).field(data).attach(files).end(function (response) {\n      if (response.statusType === 4 || response.statusType === 5 || !response.body || !response.body.ok) {\n        reject(response);\n      } else {\n        resolve(response.body);\n      }\n    });\n  });\n}\n\nfunction getBody(stream) {\n  var data = '';\n\n  return new Promise(function (resolve, reject) {\n    stream.on('data', function (chunk) {\n      data += chunk;\n    });\n\n    stream.on('end', function () {\n      resolve(data);\n    });\n\n    stream.on('error', reject);\n  });\n}\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/functions/webhook.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = webhook;\n\nvar _http = require('http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _qs = require('qs');\n\nvar _qs2 = _interopRequireDefault(_qs);\n\nvar _fetch = require('./fetch');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULTS = {\n  server: {},\n  port: 443\n};\n\nfunction webhook() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var bot = arguments[1];\n\n  options = Object.assign(DEFAULTS, options);\n\n  return bot.api.setWebhook(options.url).then(function () {\n    bot._webhookServer = _http2.default.createServer(options.server, function (req, res) {\n      return (0, _fetch.getBody)(req).then(function (data) {\n        bot.emit('update', _qs2.default.parse(data).result);\n\n        res.end('OK');\n      });\n    }).listen(options.port);\n  });\n}\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/functions/poll.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = poll;\nfunction poll(bot) {\n  return bot.api.getUpdates(bot.update).then(function (response) {\n    if (!response.result.length) {\n      return poll(bot);\n    }\n    bot.emit('update', response.result);\n\n    if (bot._stop) {\n      return null;\n    }\n    return poll(bot);\n  });\n}\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/functions/argument-parser.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = argumentParser;\nvar FORMAT_REQUIRED = /<(\\W*)(\\w+)\\|?(\\w+)?>/g;\nvar FORMAT_OPTIONAL = /\\[(\\W*)(\\w+)\\|?(\\w+)?\\]/g;\nvar FORMAT_REST = /\\.{3}(\\w+)/g;\n\nvar ESCAPABLE = '.^$*+?()[{\\\\|}]'.split('');\n\nvar REQUIRED = 0;\nvar OPTIONAL = 1;\nvar REST = 2;\n\nfunction escape(symbols) {\n  var append = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  return symbols.split('').map(function (symbol) {\n    return (ESCAPABLE.indexOf(symbol) ? '\\\\' + symbol : symbol) + append;\n  }).join('');\n}\n\nvar TYPES = {\n  number: '\\\\d',\n  word: '\\\\S'\n};\n\nfunction getFormat() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'word';\n  var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'required';\n\n  var t = TYPES[type];\n\n  switch (param) {// eslint-disable-line\n    case 'required':\n      return '(' + t + '+)';\n    case 'optional':\n      return '(' + t + '+)?';\n    case 'rest':\n      return '(.*)';\n  }\n\n  return '';\n}\n\n/**\n * Parses a message for arguments, based on format\n *\n * The format option may include '<requiredParam>' and '[optionalParam]' and\n * '...[restParam]'\n * \t\t<requiredParam> indicates a required, single-word argument\n * \t\t[optionalParam] indicates an optinal, single-word argument\n *   \t...[restParam] indicates a multi-word argument which records until end\n *\n *    You can define a type for your arguments using pipe | sign, like this:\n *    [count|number]\n *    Supported Types are: number and word, defaults to word\n *\n *    Example:\n *            format: '<name> [count|number] ...text'\n *            string 1: 'Someone Hey, wassup'\n *            {name: 'Someone',\n *             count: undefined,\n *             text: 'Hey, wassup'}\n *\n *            string 2: 'Someone 5 Hey, wassup'\n *            {name: 'Someone',\n *         \t\t count: 5,\n *         \t\t text: 'Hey, wassup'}\n * @param  {string} format Format, as described above\n * @param  {string} string The message to parse\n * @return {object} Parsed arguments\n */\nfunction argumentParser(format, string) {\n  string = string.replace(/[^\\s]+/, '').trim();\n  format = format.replace(/[^\\s]+/, '').trim();\n\n  if (!format) {\n    return { args: {}, params: {} };\n  }\n\n  var indexes = [];\n  var params = {};\n\n  format = format.replace(/\\s/g, '\\\\s*');\n  format = format.replace(FORMAT_REQUIRED, function (f, symbols, arg) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'word';\n    var offset = arguments[4];\n\n    indexes.push({ arg: arg, offset: offset });\n    params[arg] = REQUIRED;\n    return (escape(symbols) + getFormat(type, 'required')).trim();\n  });\n  format = format.replace(FORMAT_OPTIONAL, function (f, symbols, arg) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'word';\n    var offset = arguments[4];\n\n    indexes.push({ arg: arg, offset: offset });\n    params[arg] = OPTIONAL;\n    return (escape(symbols, '?') + getFormat(type, 'optional')).trim();\n  });\n  format = format.replace(FORMAT_REST, function (full, arg, offset) {\n    indexes.push({ offset: offset, arg: arg });\n    params[arg] = REST;\n    return getFormat(null, 'rest');\n  });\n\n  if (!string) {\n    return { args: {}, params: params };\n  }\n\n  indexes = indexes.sort(function (a, b) {\n    return a.offset < b.offset ? -1 : 1;\n  });\n\n  var regex = new RegExp(format);\n\n  var matched = regex.exec(string).slice(1);\n\n  var object = {};\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = matched.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          index = _step$value[0],\n          match = _step$value[1];\n\n      var argument = indexes[index];\n\n      object[argument.arg] = match;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return { args: object, params: params };\n}\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/types/Message.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Base2 = require('./Base');\n\nvar _Base3 = _interopRequireDefault(_Base2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Message class, used to send message to a chat\n */\nvar Message = function (_Base) {\n  _inherits(Message, _Base);\n\n  /**\n   * Create a new message\n   * @param  {object} properties Message properties, as defined by Telegram API\n   */\n  function Message() {\n    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Message);\n\n    var _this = _possibleConstructorReturn(this, (Message.__proto__ || Object.getPrototypeOf(Message)).call(this, 'sendMessage'));\n\n    _this.properties = properties;\n    _this._keyboard = new _Base3.default();\n    return _this;\n  }\n\n  /**\n   * Set chat_id of the message\n   * @param  {number} chat\n   * @return {object} returns the message object\n   */\n\n\n  _createClass(Message, [{\n    key: 'to',\n    value: function to(chat) {\n      this.properties.chat_id = chat;\n      return this;\n    }\n\n    /**\n     * Set text of the message\n     * @param  {string} text Message's content\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'text',\n    value: function text(_text) {\n      this.properties.text = _text;\n      return this;\n    }\n\n    /**\n     * Set text of the message in HTML format\n     * @param  {string} text Message's content in HTML format\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'html',\n    value: function html(text) {\n      this.properties.parse_mode = 'HTML';\n      if (text) {\n        this.properties.text = text;\n      }\n      return this;\n    }\n\n    /**\n     * Set text of the message in Markdown format\n     * @param  {string} text Message's content in Markdown format\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'markdown',\n    value: function markdown(text) {\n      this.properties.parse_mode = 'Markdown';\n      if (text) {\n        this.properties.text = text;\n      }\n      return this;\n    }\n\n    /**\n     * Set reply_to_message_id of the message\n     * @param  {number} id message_id of the message to reply to\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'reply',\n    value: function reply(id) {\n      this.properties.reply_to_message_id = id;\n      return this;\n    }\n\n    /**\n     * Set disable_web_page_preview of the message\n     * @param  {boolean} enable\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'preview',\n    value: function preview() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.properties.disable_web_page_preview = !enable;\n      return this;\n    }\n\n    /**\n     * Sets keyboard of the message\n     * The value of reply_markup is set to the sanitized keyboard properties\n     * i.e. reply_markup = JSON.stringify(kb.getProperties())\n     * @param  {object} kb A Keyboard instance\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'keyboard',\n    value: function keyboard(kb) {\n      this._keyboard = kb;\n      return this;\n    }\n\n    // This class inherits Base's send method\n\n  }]);\n\n  return Message;\n}(_Base3.default);\n\nexports.default = Message;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/types/Base.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = require('events');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ANSWER_THRESHOLD = 10;\n\n/**\n * Base class of all classes\n */\n\nvar Base = function (_EventEmitter) {\n  _inherits(Base, _EventEmitter);\n\n  function Base(method) {\n    _classCallCheck(this, Base);\n\n    var _this = _possibleConstructorReturn(this, (Base.__proto__ || Object.getPrototypeOf(Base)).call(this));\n\n    _this.method = method;\n    _this.properties = {};\n    return _this;\n  }\n\n  /**\n   * Sends the message, you should only use this method yourself if\n   * you are extending this class. Normally you should call bot.send(message)\n   *\n   * Events: message:sent => Emitted after sending the message to API, gets the\n   * \t\t\t\t\t\t\t\t\t\t\t\t  API's response\n   *\n   *\t\t\tmessage:answer => Emitted when your message gets an answer from\n   *\t\t\t\t                 the contact (reply in case of groups)\n   *\t\t\t\t                 gets the Update object containing message\n   *\n   * @param  {object} bot\n   * @return {promise} returns a promise, resolved with message:answer\n   */\n\n\n  _createClass(Base, [{\n    key: 'send',\n    value: function send(bot) {\n      var _this2 = this;\n\n      if (this._keyboard) {\n        var replyMarkup = JSON.stringify(this._keyboard.getProperties());\n        this.properties.reply_markup = replyMarkup;\n      }\n\n      var messageId = void 0;\n      return new Promise(function (resolve) {\n        bot.api[_this2.method](_this2.properties).then(function (response) {\n          messageId = response.result.message_id;\n          _this2.emit('message:sent', response);\n        });\n\n        if (_this2._keyboard.one_time_keyboard) {\n          _this2._keyboard.replyMarkup = '';\n        }\n\n        var chat = _this2.properties.chat_id;\n        var answers = 0;\n        bot.on('update', function listener(result) {\n          answers += result.length;\n\n          var update = result.find(function (_ref) {\n            var message = _ref.message;\n\n            // if in a group, there will be a reply to this message\n            if (chat < 0) {\n              return message.chat.id === chat && message.reply_to_message && message.reply_to_message.message_id === messageId;\n            }\n\n            return message.chat.id === chat;\n          });\n\n          if (update) {\n            resolve(update.message);\n\n            this.emit('message:answer', update.message);\n\n            bot.removeListener('update', listener);\n          }\n\n          if (answers >= ANSWER_THRESHOLD) {\n            bot.removeListener('update', listener);\n          }\n        });\n      });\n    }\n\n    /**\n     * Returns properties of the object\n     * @return {object} properties of object\n     */\n\n  }, {\n    key: 'getProperties',\n    value: function getProperties() {\n      return this.properties;\n    }\n\n    /**\n     * Set properties of the object\n     * @param {object} object properties to set\n     * @param {boolean} extend A boolean indicating if the properties should be\n     *                         extended by the object provided (Object.assign)\n     *                         or properties should be replaced by the object\n     *                         defaults to true\n     * @return {object} returns the properties (same as getProperties)\n     */\n\n  }, {\n    key: 'setProperties',\n    value: function setProperties(object) {\n      var extend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      this.properties = extend ? Object.assign(this.properties, object) : object;\n\n      return this.getProperties();\n    }\n  }]);\n\n  return Base;\n}(_events.EventEmitter);\n\nexports.default = Base;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/types/File.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Base2 = require('./Base');\n\nvar _Base3 = _interopRequireDefault(_Base2);\n\nvar _mime = require('mime');\n\nvar _mime2 = _interopRequireDefault(_mime);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TYPES = ['photo', 'video', 'document', 'audio'];\n\n/**\n * File class, used to send pictures/movies/audios/documents to chat\n */\n\nvar File = function (_Base) {\n  _inherits(File, _Base);\n\n  /**\n   * Create a new file instance\n   * @param  {object} properties File properties, as defined by Telegram API\n   */\n  function File() {\n    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, File);\n\n    var _this = _possibleConstructorReturn(this, (File.__proto__ || Object.getPrototypeOf(File)).call(this, 'sendDocument'));\n\n    _this.properties = properties;\n    _this._keyboard = new _Base3.default();\n    return _this;\n  }\n\n  /**\n   * Set chat_id of the message\n   * @param  {number} chat\n   * @return {object} returns the message object\n   */\n\n\n  _createClass(File, [{\n    key: 'to',\n    value: function to(chat) {\n      this.properties.chat_id = chat;\n      return this;\n    }\n\n    /**\n     * Set file of the message\n     * @param  {string} file File path\n     * @param {string} fileType (optional) if the first argument is a\n     *                          file_id string, this option indicates file type\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'file',\n    value: function file(_file, fileType) {\n      if (fileType) {\n        this.properties[fileType] = { file: _file };\n\n        return this;\n      }\n\n      var _mime$lookup$split = _mime2.default.lookup(_file).split('/'),\n          _mime$lookup$split2 = _slicedToArray(_mime$lookup$split, 2),\n          type = _mime$lookup$split2[0],\n          extension = _mime$lookup$split2[1]; // eslint-disable-line\n\n\n      if (type === 'image') {\n        type = 'photo';\n      }\n\n      if (extension === 'gif') {\n        type = 'document';\n      }\n\n      if (TYPES.indexOf(type) === -1) {\n        type = 'document';\n      }\n\n      this.properties[type] = { file: _file };\n\n      this.method = 'send' + (type[0].toUpperCase() + type.slice(1));\n\n      return this;\n    }\n\n    /**\n     * Set caption for photos\n     * @param  {string} text caption's text\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'caption',\n    value: function caption(text) {\n      this.properties.caption = text;\n      return this;\n    }\n\n    /**\n     * Set reply_to_message_id of the message\n     * @param  {number} id message_id of the message to reply to\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'reply',\n    value: function reply(id) {\n      this.properties.reply_to_message_id = id;\n      return this;\n    }\n\n    /**\n     * Sets keyboard of the message\n     * The value of reply_markup is set to the sanitized keyboard properties\n     * i.e. reply_markup = JSON.stringify(kb.getProperties())\n     * @param  {object} kb A Keyboard instance\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'keyboard',\n    value: function keyboard(kb) {\n      this._keyboard = kb;\n      return this;\n    }\n\n    // This class inherits Base's send method\n\n  }]);\n\n  return File;\n}(_Base3.default);\n\nexports.default = File;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/types/Keyboard.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Base2 = require('./Base');\n\nvar _Base3 = _interopRequireDefault(_Base2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Keyboard class, used to configure keyboards for messages.\n * You should pass your instance of this class to message.keyboard() method\n */\nvar Keyboard = function (_Base) {\n  _inherits(Keyboard, _Base);\n\n  /**\n   * Create a new keyboard\n   * @param  {object} properties Keyboard properties, as defined by Telegram API\n   *                             See ReplyKeyboardMarkup, ReplyKeyboardHide,\n   *                                 ForceReply\n   */\n  function Keyboard() {\n    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Keyboard);\n\n    var _this = _possibleConstructorReturn(this, (Keyboard.__proto__ || Object.getPrototypeOf(Keyboard)).call(this));\n\n    _this.properties = properties;\n    return _this;\n  }\n\n  /**\n   * Set the keyboard property of reply_markup\n   * @param  {array} keys An array of arrays, with the format of\n   *                            Column         Column\n   *                      Row [['TopLeft',   'TopRight'],\n   *                      Row ['BottomLeft', 'BottomRight']]\n   * @return {object} returns the keyboard object\n   */\n\n\n  _createClass(Keyboard, [{\n    key: 'keys',\n    value: function keys(_keys) {\n      this.properties.keyboard = _keys;\n      this.properties.hide_keyboard = false;\n      return this;\n    }\n\n    /**\n     * Set force_keyboard property of reply_markup\n     * @param  {boolean} enable value of force_keyboard, defaults to true\n     * @return {object} returns the keyboard object\n     */\n\n  }, {\n    key: 'force',\n    value: function force() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.properties.force_keyboard = enable;\n      return this;\n    }\n\n    /**\n     * Set resize_keyboard property of reply_markup\n     * @param  {boolean} enable value of resize_keyboard, defaults to true\n     * @return {object} returns the keyboard object\n     */\n\n  }, {\n    key: 'resize',\n    value: function resize() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.properties.resize_keyboard = enable;\n      return this;\n    }\n\n    /**\n     * Set force_keyboard property of reply_markup\n     * @param  {boolean} enable value of force_keyboard, defaults to true\n     * @return {object} returns the keyboard object\n     */\n\n  }, {\n    key: 'oneTime',\n    value: function oneTime() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.properties.one_time_keyboard = enable;\n      return this;\n    }\n\n    /**\n     * Set selective property of reply_markup\n     * @param  {boolean} enable value of force_keyboard, defaults to true\n     * @return {object} returns the keyboard object\n     */\n\n  }, {\n    key: 'selective',\n    value: function selective() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.properties.selective = enable;\n      return this;\n    }\n\n    /**\n     * Set hide_keyboard property of reply_markup to true\n     * @return {object} returns the keyboard object\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide() {\n      this.properties = {\n        hide_keyboard: true\n      };\n\n      return this;\n    }\n  }]);\n\n  return Keyboard;\n}(_Base3.default);\n\nexports.default = Keyboard;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/types/BulkMessage.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Message2 = require('./Message');\n\nvar _Message3 = _interopRequireDefault(_Message2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Message class, used to send a message to multiple chats\n */\nvar BulkMessage = function (_Message) {\n  _inherits(BulkMessage, _Message);\n\n  /**\n   * Create a new message\n   * @param  {object} properties Message properties, as defined by Telegram API\n   */\n  function BulkMessage() {\n    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, BulkMessage);\n\n    var _this = _possibleConstructorReturn(this, (BulkMessage.__proto__ || Object.getPrototypeOf(BulkMessage)).call(this, properties));\n\n    _this.chats = [];\n    return _this;\n  }\n\n  /**\n   * Set multiple chat_id's for the message\n   * @param  {number} chat\n   * @return {object} returns the message object\n   */\n\n\n  _createClass(BulkMessage, [{\n    key: 'to',\n    value: function to() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var chats = args.reduce(function (a, b) {\n        return a.concat(b);\n      }, []);\n\n      this.chats = chats;\n      return this;\n    }\n\n    /**\n     * Send the message to all chats\n     * @param  {Bot} bot\n     * @return {Promise} Resolved when the message is sent to all chats\n     */\n\n  }, {\n    key: 'send',\n    value: function send(bot) {\n      var _this2 = this;\n\n      var promises = this.chats.map(function (chat) {\n        var clone = Object.assign({}, _this2.properties);\n        var message = new _Message3.default(clone).to(chat);\n        return message.send(bot);\n      });\n\n      return Promise.all(promises);\n    }\n  }]);\n\n  return BulkMessage;\n}(_Message3.default);\n\nexports.default = BulkMessage;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/types/Question.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Message2 = require('./Message');\n\nvar _Message3 = _interopRequireDefault(_Message2);\n\nvar _Keyboard = require('./Keyboard');\n\nvar _Keyboard2 = _interopRequireDefault(_Keyboard);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Question class, extends Message\n * Sends a message, shows a keyboard with the answers provided, and validates\n * the answer\n */\nvar Question = function (_Message) {\n  _inherits(Question, _Message);\n\n  /**\n   * Create a new question\n   * @param  {object} options Options, same as Message, plus `answers` which\n   *                          is a keyboard layout, see Keyboard#keys\n   */\n  function Question() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Question);\n\n    var _this = _possibleConstructorReturn(this, (Question.__proto__ || Object.getPrototypeOf(Question)).call(this, options));\n\n    var kb = new _Keyboard2.default().force().oneTime().selective();\n    _this.keyboard(kb);\n\n    _this.answers(options.answers);\n    return _this;\n  }\n\n  /**\n   * Sets answers of the question. This is passed to Keyboard#keys, and then\n   * used to validate the answer given\n   * @param  {array} answers Array of arrays of strings, same as Keyboard#keys\n   * @return {object} returns the question object\n   */\n\n\n  _createClass(Question, [{\n    key: 'answers',\n    value: function answers(_answers) {\n      this._answers = _answers;\n      this._keyboard.keys(_answers);\n      return this;\n    }\n\n    /**\n     * Sends the question (same as Message#send), and validates the answer given\n     * if the answer is one of the defined answers, resolves, else rejects\n     * You should not manually use this method unless you're extending this class\n     * You should instead use bot.send(question);\n     * @param  {object} bot\n     * @return {promise} A promise which is resolved in case of valid answer, and\n     *                     rejected in case of invalid answer\n     */\n\n  }, {\n    key: 'send',\n    value: function send(bot) {\n      var _this2 = this;\n\n      var answers = this._answers;\n\n      return _get(Question.prototype.__proto__ || Object.getPrototypeOf(Question.prototype), 'send', this).call(this, bot).then(function (message) {\n        var answer = void 0;\n\n        answers.forEach(function find(a) {\n          if (Array.isArray(a)) {\n            a.forEach(find);\n          }\n          if (a === message.text) {\n            answer = a;\n          }\n        });\n\n        if (answer) {\n          _this2.emit('question:answer', answer, message);\n          return message;\n        }\n\n        _this2.emit('question:invalid', message);\n        throw message;\n      });\n    }\n  }]);\n\n  return Question;\n}(_Message3.default);\n\nexports.default = Question;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/build/types/Forward.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Base2 = require('./Base');\n\nvar _Base3 = _interopRequireDefault(_Base2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Forward class, used to forward messages from a chat to another\n */\nvar Forward = function (_Base) {\n  _inherits(Forward, _Base);\n\n  /**\n   * Create a new forward message\n   * @param  {object} properties Forward Message properties, as defined by\n   *                             Telegram API\n   */\n  function Forward() {\n    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Forward);\n\n    var _this = _possibleConstructorReturn(this, (Forward.__proto__ || Object.getPrototypeOf(Forward)).call(this, 'forwardMessage'));\n\n    _this.properties = properties;\n    _this._keyboard = new _Base3.default();\n    return _this;\n  }\n\n  /**\n   * Set chat_id of the message\n   * @param  {number} chat\n   * @return {object} returns the message object\n   */\n\n\n  _createClass(Forward, [{\n    key: 'to',\n    value: function to(chat) {\n      this.properties.chat_id = chat;\n      return this;\n    }\n\n    /**\n     * Set from_chat_id, source of message's chat's id\n     * @param  {number} chat Source chat id\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'from',\n    value: function from(chat) {\n      this.properties.from_chat_id = chat;\n      return this;\n    }\n\n    /**\n     * Sets message_id, the message to forward from source to target chat\n     * @param  {number} message ID of the message to forward\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'message',\n    value: function message(_message) {\n      this.properties.message_id = _message;\n      return this;\n    }\n\n    // This class inherits Base's send method\n\n  }]);\n\n  return Forward;\n}(_Base3.default);\n\nexports.default = Forward;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/types/Base.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = require('events');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ANSWER_THRESHOLD = 10;\n\n/**\n * Base class of all classes\n */\n\nvar Base = function (_EventEmitter) {\n  _inherits(Base, _EventEmitter);\n\n  function Base(method) {\n    _classCallCheck(this, Base);\n\n    var _this = _possibleConstructorReturn(this, (Base.__proto__ || Object.getPrototypeOf(Base)).call(this));\n\n    _this.method = method;\n    _this.properties = {};\n    return _this;\n  }\n\n  /**\n   * Sends the message, you should only use this method yourself if\n   * you are extending this class. Normally you should call bot.send(message)\n   *\n   * Events: message:sent => Emitted after sending the message to API, gets the\n   * \t\t\t\t\t\t\t\t\t\t\t\t  API's response\n   *\n   *\t\t\tmessage:answer => Emitted when your message gets an answer from\n   *\t\t\t\t                 the contact (reply in case of groups)\n   *\t\t\t\t                 gets the Update object containing message\n   *\n   * @param  {object} bot\n   * @return {promise} returns a promise, resolved with message:answer\n   */\n\n\n  _createClass(Base, [{\n    key: 'send',\n    value: function send(bot) {\n      var _this2 = this;\n\n      if (this._keyboard) {\n        var replyMarkup = JSON.stringify(this._keyboard.getProperties());\n        this.properties.reply_markup = replyMarkup;\n      }\n\n      var messageId = void 0;\n      return new Promise(function (resolve) {\n        bot.api[_this2.method](_this2.properties).then(function (response) {\n          messageId = response.result.message_id;\n          _this2.emit('message:sent', response);\n        });\n\n        if (_this2._keyboard.one_time_keyboard) {\n          _this2._keyboard.replyMarkup = '';\n        }\n\n        var chat = _this2.properties.chat_id;\n        var answers = 0;\n        bot.on('update', function listener(result) {\n          answers += result.length;\n\n          var update = result.find(function (_ref) {\n            var message = _ref.message;\n\n            // if in a group, there will be a reply to this message\n            if (chat < 0) {\n              return message.chat.id === chat && message.reply_to_message && message.reply_to_message.message_id === messageId;\n            }\n\n            return message.chat.id === chat;\n          });\n\n          if (update) {\n            resolve(update.message);\n\n            this.emit('message:answer', update.message);\n\n            bot.removeListener('update', listener);\n          }\n\n          if (answers >= ANSWER_THRESHOLD) {\n            bot.removeListener('update', listener);\n          }\n        });\n      });\n    }\n\n    /**\n     * Returns properties of the object\n     * @return {object} properties of object\n     */\n\n  }, {\n    key: 'getProperties',\n    value: function getProperties() {\n      return this.properties;\n    }\n\n    /**\n     * Set properties of the object\n     * @param {object} object properties to set\n     * @param {boolean} extend A boolean indicating if the properties should be\n     *                         extended by the object provided (Object.assign)\n     *                         or properties should be replaced by the object\n     *                         defaults to true\n     * @return {object} returns the properties (same as getProperties)\n     */\n\n  }, {\n    key: 'setProperties',\n    value: function setProperties(object) {\n      var extend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      this.properties = extend ? Object.assign(this.properties, object) : object;\n\n      return this.getProperties();\n    }\n  }]);\n\n  return Base;\n}(_events.EventEmitter);\n\nexports.default = Base;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/types/BulkMessage.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Message2 = require('./Message');\n\nvar _Message3 = _interopRequireDefault(_Message2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Message class, used to send a message to multiple chats\n */\nvar BulkMessage = function (_Message) {\n  _inherits(BulkMessage, _Message);\n\n  /**\n   * Create a new message\n   * @param  {object} properties Message properties, as defined by Telegram API\n   */\n  function BulkMessage() {\n    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, BulkMessage);\n\n    var _this = _possibleConstructorReturn(this, (BulkMessage.__proto__ || Object.getPrototypeOf(BulkMessage)).call(this, properties));\n\n    _this.chats = [];\n    return _this;\n  }\n\n  /**\n   * Set multiple chat_id's for the message\n   * @param  {number} chat\n   * @return {object} returns the message object\n   */\n\n\n  _createClass(BulkMessage, [{\n    key: 'to',\n    value: function to() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var chats = args.reduce(function (a, b) {\n        return a.concat(b);\n      }, []);\n\n      this.chats = chats;\n      return this;\n    }\n\n    /**\n     * Send the message to all chats\n     * @param  {Bot} bot\n     * @return {Promise} Resolved when the message is sent to all chats\n     */\n\n  }, {\n    key: 'send',\n    value: function send(bot) {\n      var _this2 = this;\n\n      var promises = this.chats.map(function (chat) {\n        var clone = Object.assign({}, _this2.properties);\n        var message = new _Message3.default(clone).to(chat);\n        return message.send(bot);\n      });\n\n      return Promise.all(promises);\n    }\n  }]);\n\n  return BulkMessage;\n}(_Message3.default);\n\nexports.default = BulkMessage;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/types/Message.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Base2 = require('./Base');\n\nvar _Base3 = _interopRequireDefault(_Base2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Message class, used to send message to a chat\n */\nvar Message = function (_Base) {\n  _inherits(Message, _Base);\n\n  /**\n   * Create a new message\n   * @param  {object} properties Message properties, as defined by Telegram API\n   */\n  function Message() {\n    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Message);\n\n    var _this = _possibleConstructorReturn(this, (Message.__proto__ || Object.getPrototypeOf(Message)).call(this, 'sendMessage'));\n\n    _this.properties = properties;\n    _this._keyboard = new _Base3.default();\n    return _this;\n  }\n\n  /**\n   * Set chat_id of the message\n   * @param  {number} chat\n   * @return {object} returns the message object\n   */\n\n\n  _createClass(Message, [{\n    key: 'to',\n    value: function to(chat) {\n      this.properties.chat_id = chat;\n      return this;\n    }\n\n    /**\n     * Set text of the message\n     * @param  {string} text Message's content\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'text',\n    value: function text(_text) {\n      this.properties.text = _text;\n      return this;\n    }\n\n    /**\n     * Set text of the message in HTML format\n     * @param  {string} text Message's content in HTML format\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'html',\n    value: function html(text) {\n      this.properties.parse_mode = 'HTML';\n      if (text) {\n        this.properties.text = text;\n      }\n      return this;\n    }\n\n    /**\n     * Set text of the message in Markdown format\n     * @param  {string} text Message's content in Markdown format\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'markdown',\n    value: function markdown(text) {\n      this.properties.parse_mode = 'Markdown';\n      if (text) {\n        this.properties.text = text;\n      }\n      return this;\n    }\n\n    /**\n     * Set reply_to_message_id of the message\n     * @param  {number} id message_id of the message to reply to\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'reply',\n    value: function reply(id) {\n      this.properties.reply_to_message_id = id;\n      return this;\n    }\n\n    /**\n     * Set disable_web_page_preview of the message\n     * @param  {boolean} enable\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'preview',\n    value: function preview() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.properties.disable_web_page_preview = !enable;\n      return this;\n    }\n\n    /**\n     * Sets keyboard of the message\n     * The value of reply_markup is set to the sanitized keyboard properties\n     * i.e. reply_markup = JSON.stringify(kb.getProperties())\n     * @param  {object} kb A Keyboard instance\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'keyboard',\n    value: function keyboard(kb) {\n      this._keyboard = kb;\n      return this;\n    }\n\n    // This class inherits Base's send method\n\n  }]);\n\n  return Message;\n}(_Base3.default);\n\nexports.default = Message;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/types/File.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Base2 = require('./Base');\n\nvar _Base3 = _interopRequireDefault(_Base2);\n\nvar _mime = require('mime');\n\nvar _mime2 = _interopRequireDefault(_mime);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TYPES = ['photo', 'video', 'document', 'audio'];\n\n/**\n * File class, used to send pictures/movies/audios/documents to chat\n */\n\nvar File = function (_Base) {\n  _inherits(File, _Base);\n\n  /**\n   * Create a new file instance\n   * @param  {object} properties File properties, as defined by Telegram API\n   */\n  function File() {\n    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, File);\n\n    var _this = _possibleConstructorReturn(this, (File.__proto__ || Object.getPrototypeOf(File)).call(this, 'sendDocument'));\n\n    _this.properties = properties;\n    _this._keyboard = new _Base3.default();\n    return _this;\n  }\n\n  /**\n   * Set chat_id of the message\n   * @param  {number} chat\n   * @return {object} returns the message object\n   */\n\n\n  _createClass(File, [{\n    key: 'to',\n    value: function to(chat) {\n      this.properties.chat_id = chat;\n      return this;\n    }\n\n    /**\n     * Set file of the message\n     * @param  {string} file File path\n     * @param {string} fileType (optional) if the first argument is a\n     *                          file_id string, this option indicates file type\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'file',\n    value: function file(_file, fileType) {\n      if (fileType) {\n        this.properties[fileType] = { file: _file };\n\n        return this;\n      }\n\n      var _mime$lookup$split = _mime2.default.lookup(_file).split('/'),\n          _mime$lookup$split2 = _slicedToArray(_mime$lookup$split, 2),\n          type = _mime$lookup$split2[0],\n          extension = _mime$lookup$split2[1]; // eslint-disable-line\n\n\n      if (type === 'image') {\n        type = 'photo';\n      }\n\n      if (extension === 'gif') {\n        type = 'document';\n      }\n\n      if (TYPES.indexOf(type) === -1) {\n        type = 'document';\n      }\n\n      this.properties[type] = { file: _file };\n\n      this.method = 'send' + (type[0].toUpperCase() + type.slice(1));\n\n      return this;\n    }\n\n    /**\n     * Set caption for photos\n     * @param  {string} text caption's text\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'caption',\n    value: function caption(text) {\n      this.properties.caption = text;\n      return this;\n    }\n\n    /**\n     * Set reply_to_message_id of the message\n     * @param  {number} id message_id of the message to reply to\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'reply',\n    value: function reply(id) {\n      this.properties.reply_to_message_id = id;\n      return this;\n    }\n\n    /**\n     * Sets keyboard of the message\n     * The value of reply_markup is set to the sanitized keyboard properties\n     * i.e. reply_markup = JSON.stringify(kb.getProperties())\n     * @param  {object} kb A Keyboard instance\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'keyboard',\n    value: function keyboard(kb) {\n      this._keyboard = kb;\n      return this;\n    }\n\n    // This class inherits Base's send method\n\n  }]);\n\n  return File;\n}(_Base3.default);\n\nexports.default = File;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/types/Forward.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Base2 = require('./Base');\n\nvar _Base3 = _interopRequireDefault(_Base2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Forward class, used to forward messages from a chat to another\n */\nvar Forward = function (_Base) {\n  _inherits(Forward, _Base);\n\n  /**\n   * Create a new forward message\n   * @param  {object} properties Forward Message properties, as defined by\n   *                             Telegram API\n   */\n  function Forward() {\n    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Forward);\n\n    var _this = _possibleConstructorReturn(this, (Forward.__proto__ || Object.getPrototypeOf(Forward)).call(this, 'forwardMessage'));\n\n    _this.properties = properties;\n    _this._keyboard = new _Base3.default();\n    return _this;\n  }\n\n  /**\n   * Set chat_id of the message\n   * @param  {number} chat\n   * @return {object} returns the message object\n   */\n\n\n  _createClass(Forward, [{\n    key: 'to',\n    value: function to(chat) {\n      this.properties.chat_id = chat;\n      return this;\n    }\n\n    /**\n     * Set from_chat_id, source of message's chat's id\n     * @param  {number} chat Source chat id\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'from',\n    value: function from(chat) {\n      this.properties.from_chat_id = chat;\n      return this;\n    }\n\n    /**\n     * Sets message_id, the message to forward from source to target chat\n     * @param  {number} message ID of the message to forward\n     * @return {object} returns the message object\n     */\n\n  }, {\n    key: 'message',\n    value: function message(_message) {\n      this.properties.message_id = _message;\n      return this;\n    }\n\n    // This class inherits Base's send method\n\n  }]);\n\n  return Forward;\n}(_Base3.default);\n\nexports.default = Forward;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/types/Keyboard.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Base2 = require('./Base');\n\nvar _Base3 = _interopRequireDefault(_Base2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Keyboard class, used to configure keyboards for messages.\n * You should pass your instance of this class to message.keyboard() method\n */\nvar Keyboard = function (_Base) {\n  _inherits(Keyboard, _Base);\n\n  /**\n   * Create a new keyboard\n   * @param  {object} properties Keyboard properties, as defined by Telegram API\n   *                             See ReplyKeyboardMarkup, ReplyKeyboardHide,\n   *                                 ForceReply\n   */\n  function Keyboard() {\n    var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Keyboard);\n\n    var _this = _possibleConstructorReturn(this, (Keyboard.__proto__ || Object.getPrototypeOf(Keyboard)).call(this));\n\n    _this.properties = properties;\n    return _this;\n  }\n\n  /**\n   * Set the keyboard property of reply_markup\n   * @param  {array} keys An array of arrays, with the format of\n   *                            Column         Column\n   *                      Row [['TopLeft',   'TopRight'],\n   *                      Row ['BottomLeft', 'BottomRight']]\n   * @return {object} returns the keyboard object\n   */\n\n\n  _createClass(Keyboard, [{\n    key: 'keys',\n    value: function keys(_keys) {\n      this.properties.keyboard = _keys;\n      this.properties.hide_keyboard = false;\n      return this;\n    }\n\n    /**\n     * Set force_keyboard property of reply_markup\n     * @param  {boolean} enable value of force_keyboard, defaults to true\n     * @return {object} returns the keyboard object\n     */\n\n  }, {\n    key: 'force',\n    value: function force() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.properties.force_keyboard = enable;\n      return this;\n    }\n\n    /**\n     * Set resize_keyboard property of reply_markup\n     * @param  {boolean} enable value of resize_keyboard, defaults to true\n     * @return {object} returns the keyboard object\n     */\n\n  }, {\n    key: 'resize',\n    value: function resize() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.properties.resize_keyboard = enable;\n      return this;\n    }\n\n    /**\n     * Set force_keyboard property of reply_markup\n     * @param  {boolean} enable value of force_keyboard, defaults to true\n     * @return {object} returns the keyboard object\n     */\n\n  }, {\n    key: 'oneTime',\n    value: function oneTime() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.properties.one_time_keyboard = enable;\n      return this;\n    }\n\n    /**\n     * Set selective property of reply_markup\n     * @param  {boolean} enable value of force_keyboard, defaults to true\n     * @return {object} returns the keyboard object\n     */\n\n  }, {\n    key: 'selective',\n    value: function selective() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.properties.selective = enable;\n      return this;\n    }\n\n    /**\n     * Set hide_keyboard property of reply_markup to true\n     * @return {object} returns the keyboard object\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide() {\n      this.properties = {\n        hide_keyboard: true\n      };\n\n      return this;\n    }\n  }]);\n\n  return Keyboard;\n}(_Base3.default);\n\nexports.default = Keyboard;\nmodule.exports = exports['default'];\n","/home/travis/build/npmtest/node-npmtest-telegram-api/node_modules/telegram-api/types/Question.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Message2 = require('./Message');\n\nvar _Message3 = _interopRequireDefault(_Message2);\n\nvar _Keyboard = require('./Keyboard');\n\nvar _Keyboard2 = _interopRequireDefault(_Keyboard);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Question class, extends Message\n * Sends a message, shows a keyboard with the answers provided, and validates\n * the answer\n */\nvar Question = function (_Message) {\n  _inherits(Question, _Message);\n\n  /**\n   * Create a new question\n   * @param  {object} options Options, same as Message, plus `answers` which\n   *                          is a keyboard layout, see Keyboard#keys\n   */\n  function Question() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Question);\n\n    var _this = _possibleConstructorReturn(this, (Question.__proto__ || Object.getPrototypeOf(Question)).call(this, options));\n\n    var kb = new _Keyboard2.default().force().oneTime().selective();\n    _this.keyboard(kb);\n\n    _this.answers(options.answers);\n    return _this;\n  }\n\n  /**\n   * Sets answers of the question. This is passed to Keyboard#keys, and then\n   * used to validate the answer given\n   * @param  {array} answers Array of arrays of strings, same as Keyboard#keys\n   * @return {object} returns the question object\n   */\n\n\n  _createClass(Question, [{\n    key: 'answers',\n    value: function answers(_answers) {\n      this._answers = _answers;\n      this._keyboard.keys(_answers);\n      return this;\n    }\n\n    /**\n     * Sends the question (same as Message#send), and validates the answer given\n     * if the answer is one of the defined answers, resolves, else rejects\n     * You should not manually use this method unless you're extending this class\n     * You should instead use bot.send(question);\n     * @param  {object} bot\n     * @return {promise} A promise which is resolved in case of valid answer, and\n     *                     rejected in case of invalid answer\n     */\n\n  }, {\n    key: 'send',\n    value: function send(bot) {\n      var _this2 = this;\n\n      var answers = this._answers;\n\n      return _get(Question.prototype.__proto__ || Object.getPrototypeOf(Question.prototype), 'send', this).call(this, bot).then(function (message) {\n        var answer = void 0;\n\n        answers.forEach(function find(a) {\n          if (Array.isArray(a)) {\n            a.forEach(find);\n          }\n          if (a === message.text) {\n            answer = a;\n          }\n        });\n\n        if (answer) {\n          _this2.emit('question:answer', answer, message);\n          return message;\n        }\n\n        _this2.emit('question:invalid', message);\n        throw message;\n      });\n    }\n  }]);\n\n  return Question;\n}(_Message3.default);\n\nexports.default = Question;\nmodule.exports = exports['default'];\n"}